generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model User {
  id                  String         @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  email               String         @unique
  name                String?
  image               String?
  onboardingCompleted Boolean        @default(false)
  createdAt           DateTime       @default(now())
  updatedAt           DateTime       @updatedAt
  captions            Caption[]
  subscriptions       Subscription[]
  voiceProfiles       VoiceProfile[]

  @@map("users")
}

model Subscription {
  id                   String   @id @default(cuid())
  userId               String   @db.Uuid
  plan                 String
  status               String
  currentPeriodEnd     DateTime
  stripeCustomerId     String?
  stripeSubscriptionId String?
  createdAt            DateTime @default(now())
  updatedAt            DateTime @updatedAt
  user                 User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@map("subscriptions")
}

model Caption {
  id           String   @id @default(cuid())
  userId       String   @db.Uuid
  content      String
  context      String?
  voiceProfile String?
  platform     String?  @default("instagram")
  style        String?
  metadata     Json?
  isSaved      Boolean  @default(false)
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@map("captions")
}

model VoiceProfile {
  id               String     @id @default(cuid())
  userId           String     @db.Uuid
  name             String
  description      String
  style            String
  examples         String[]
  createdAt        DateTime   @default(now())
  updatedAt        DateTime   @updatedAt
  platformId       String?
  toneId           String?
  contentTypeIds   String[]   @default([])
  voiceStrength    Int        @default(75)
  stylePreferences Json?      @default("{\"includeCTA\": true, \"useQuestions\": true, \"includeEmojis\": true}")
  platform         Platform?  @relation(fields: [platformId], references: [id], onUpdate: NoAction)
  tone             BrandTone? @relation(fields: [toneId], references: [id], onUpdate: NoAction)
  user             User       @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@map("voice_profiles")
}

model Platform {
  id            String         @id @default(cuid())
  name          String         @unique
  network       String?
  description   String
  createdAt     DateTime       @default(now())
  updatedAt     DateTime       @default(now()) @updatedAt
  voiceProfiles VoiceProfile[]

  @@map("platforms")
}

model BrandTone {
  id            String         @id @default(cuid())
  name          String         @unique
  emoji         String
  description   String
  example       String
  createdAt     DateTime       @default(now())
  updatedAt     DateTime       @default(now()) @updatedAt
  voiceProfiles VoiceProfile[]

  @@map("brand_tones")
}

model ContentType {
  id        String   @id @default(cuid())
  name      String   @unique
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now()) @updatedAt

  @@map("content_types")
}
