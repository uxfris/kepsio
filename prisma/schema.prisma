// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model User {
  id                  String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  email               String   @unique
  name                String?
  image               String?
  onboardingCompleted Boolean  @default(false)
  createdAt           DateTime @default(now())
  updatedAt           DateTime @updatedAt

  // Relations
  captions      Caption[]
  subscriptions Subscription[]
  voiceProfiles VoiceProfile[]

  @@map("users")
}

model Subscription {
  id                   String   @id @default(cuid())
  userId               String   @db.Uuid
  plan                 String   // 'free', 'pro', 'enterprise'
  status               String   // 'active', 'canceled', 'past_due'
  currentPeriodEnd     DateTime
  stripeCustomerId     String?
  stripeSubscriptionId String?
  createdAt            DateTime @default(now())
  updatedAt            DateTime @updatedAt

  // Relations
  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@map("subscriptions")
}

model Caption {
  id           String   @id @default(cuid())
  userId       String   @db.Uuid
  content      String
  context      String?
  voiceProfile String?
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt

  // Relations
  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@map("captions")
}

model VoiceProfile {
  id               String   @id @default(cuid())
  userId           String   @db.Uuid
  name             String
  description      String
  platformId       String?
  toneId           String?
  style            String
  contentTypeIds   String[] @default([]) // Array of content type IDs
  examples         String[]
  createdAt        DateTime @default(now())
  updatedAt        DateTime @updatedAt

  // Relations
  user        User      @relation(fields: [userId], references: [id], onDelete: Cascade)
  platform    Platform? @relation(fields: [platformId], references: [id])
  tone        BrandTone? @relation(fields: [toneId], references: [id])

  @@map("voice_profiles")
}

model Platform {
  id          String   @id @default(cuid())
  name        String   @unique
  network     String?  // Social network identifier for SocialIcon
  description String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  // Relations
  voiceProfiles VoiceProfile[]

  @@map("platforms")
}

model BrandTone {
  id          String   @id @default(cuid())
  name        String   @unique
  emoji       String
  description String
  example     String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  // Relations
  voiceProfiles VoiceProfile[]

  @@map("brand_tones")
}

model ContentType {
  id        String   @id @default(cuid())
  name      String   @unique
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("content_types")
}
